#include <math.h>
#include <stdio.h>
extern double fabs(double x);
extern double acos(double x);
extern double acosh(double x);
extern double atan(double x);
extern double atanh(double x);
extern double asin(double x);
extern double asinh(double x);
extern double acos(double x);
extern double acosh(double x);
extern double asin(double x);
extern double asinh(double x);
extern double atan(double x);
extern double atanh(double x);
extern double ceil(double x);
extern double cos(double x);
extern double cosh(double x);
extern double tan(double x);
extern double tanh(double x);
extern double sin(double x);
extern double sinh(double x);
extern double exp(double x);
extern double floor(double x);
extern double pow(double x, double y);
extern double factorial(double x);
extern double log(double x);
extern double arbitrary_log(double x, double base);
extern double gcd_pair(double a, double b);
extern double lcm_pair(double a, double b);
extern double gcd_multi(unsigned int size, ...);
extern double lcm_multi(unsigned int size, ...);
extern double multi_min(unsigned int size, ...);
extern double multi_max(unsigned int size, ...);
extern void NR_MINIMISE(double(*func)(double VOI, double *C, double *R, double *S, double *A),double VOI, double *C, double *R, double *S, double *A, double *V);


void OC_CellML_RHS_routine(double VOI, double* OC_STATE, double* OC_RATE, double* OC_WANTED, double* OC_KNOWN)
{

double DUMMY_ASSIGNMENT;
double CONSTANTS[35], ALGEBRAIC[6];

/* Constant V_m */
DUMMY_ASSIGNMENT /*OC_STATE[0]*/ = 0;
/* Constant r */
DUMMY_ASSIGNMENT /*OC_STATE[1]*/ = 0;
/* Constant I_HH */
DUMMY_ASSIGNMENT /*OC_KNOWN[0]*/ = 0;
/* Constant k */
CONSTANTS[0] = 128;
/* Constant a */
CONSTANTS[1] = 0.15;
/* Constant e_0 */
CONSTANTS[2] = 0.002;
/* Constant m_1 */
CONSTANTS[3] = 0.2;
/* Constant m_2 */
CONSTANTS[4] = 0.3;
/* Constant stim */
CONSTANTS[5] = 99;
/* Constant D */
DUMMY_ASSIGNMENT /*OC_STATE[2]*/ = 3.8e-14;
/* Constant A_1 */
DUMMY_ASSIGNMENT /*OC_STATE[3]*/ = 1e-14;
/* Constant A_2 */
DUMMY_ASSIGNMENT /*OC_STATE[4]*/ = 3.4e-13;
/* Constant x_1 */
DUMMY_ASSIGNMENT /*OC_STATE[5]*/ = 1e-16;
/* Constant x_2 */
DUMMY_ASSIGNMENT /*OC_STATE[6]*/ = 8e-3;
/* Constant x_0 */
CONSTANTS[6] = 8e-3;
/* Constant R_T */
CONSTANTS[7] = 1;
/* Constant A_2_0 */
CONSTANTS[8] = 3.4e-13;
/* Constant r_0 */
CONSTANTS[9] = 3.0722;
/* Constant l_hs */
DUMMY_ASSIGNMENT /*OC_KNOWN[1]*/ = 1;
/* Constant rel_velo */
DUMMY_ASSIGNMENT /*OC_KNOWN[2]*/ = 0;
/* Constant velo_max */
CONSTANTS[10] = 7.815e-5;
/* Constant k_0_on */
CONSTANTS[11] = 0;
/* Constant k_0_off */
CONSTANTS[12] = 100e-3;
/* Constant k_Ca_on */
CONSTANTS[13] = 120e-3;
/* Constant k_Ca_off */
CONSTANTS[14] = 50e-3;
/* Constant g_0 */
CONSTANTS[15] = 4e-3;
/* Constant f_0 */
CONSTANTS[16] = 50e-3;
/* Constant h_0 */
CONSTANTS[17] = 8e-3;
/* Constant f_prime0 */
CONSTANTS[18] = 400e-3;
/* Constant h_prime0 */
CONSTANTS[19] = 6e-3;
/* Constant g_prime0 */
CONSTANTS[20] = 3.5400e-13;
/* Constant Ca_50 */
CONSTANTS[21] = 1;
/* Constant nu */
CONSTANTS[22] = 3.2;
/* Constant E_ATP */
CONSTANTS[23] = 9.1362e-20;
/* Constant kappa */
CONSTANTS[24] = 1.38e-23;
/* Constant T */
CONSTANTS[25] = 310;
/* Constant A_2_max */
CONSTANTS[26] = 0.0444557705319849;
/* Constant Dummy_1 */
DUMMY_ASSIGNMENT /*OC_STATE[7]*/ = 0;
/* Constant Dummy_2 */
DUMMY_ASSIGNMENT /*OC_STATE[8]*/ = 0;
/* Constant Element with no id */
CONSTANTS[27] =  OC_KNOWN[2]*CONSTANTS[10];
/* Constant Element with no id */
CONSTANTS[28] = CONSTANTS[16];
/* Constant Element with no id */
CONSTANTS[29] = CONSTANTS[18];
/* Constant Element with no id */
CONSTANTS[30] = CONSTANTS[17];
/* Constant Element with no id */
CONSTANTS[31] = CONSTANTS[19];
/* Constant Element with no id */
CONSTANTS[32] = CONSTANTS[15];
/* Constant Element with no id */
CONSTANTS[33] = 0.00000;
/* Constant Element with no id */
CONSTANTS[34] = (OC_KNOWN[1]<0.635000 ? 0.00000 : OC_KNOWN[1]<0.835000 ?  4.20000*(OC_KNOWN[1] - 0.635000) : OC_KNOWN[1]<1.00000 ? 0.840000+ 0.969700*(OC_KNOWN[1] - 0.835000) : OC_KNOWN[1]<1.12500 ? 1.00000 : OC_KNOWN[1]<1.82500 ? 1.00000 -  1.42860*(OC_KNOWN[1] - 1.12500) : 0.00000);
/* Element with no id */
OC_RATE[0] = ( - CONSTANTS[0]*OC_STATE[0]*(OC_STATE[0] - CONSTANTS[1])*(OC_STATE[0] - 1.00000) -  OC_STATE[0]*OC_STATE[1])+OC_KNOWN[0];
/* Element with no id */
OC_RATE[1] =  (CONSTANTS[2]+( CONSTANTS[3]*OC_STATE[1])/(CONSTANTS[4]+OC_STATE[0]))*(- OC_STATE[1] -  CONSTANTS[0]*OC_STATE[0]*((OC_STATE[0] - CONSTANTS[1]) - 1.00000));
/* Element with no id */
OC_RATE[3] = ( CONSTANTS[28]*OC_STATE[2]+ CONSTANTS[31]*OC_STATE[4]) -  (CONSTANTS[29]+CONSTANTS[30])*OC_STATE[3];
/* Element with no id */
OC_RATE[4] = ( CONSTANTS[30]*OC_STATE[3] -  (CONSTANTS[31]+CONSTANTS[32])*OC_STATE[4])+ CONSTANTS[33]*OC_STATE[2];
/* Element with no id */
OC_RATE[5] = ( (( - CONSTANTS[28]*OC_STATE[2])/OC_STATE[3])*OC_STATE[5] -  (( CONSTANTS[31]*OC_STATE[4])/OC_STATE[3])*OC_STATE[5])+CONSTANTS[27];
/* Element with no id */
OC_RATE[6] =  (( - CONSTANTS[30]*OC_STATE[3])/OC_STATE[4])*(OC_STATE[6] - CONSTANTS[6])+CONSTANTS[27];
/* Element with no id */
OC_WANTED[0] =  (( 1.12500*(( OC_STATE[4]*OC_STATE[6]+ OC_STATE[3]*OC_STATE[5]) -  CONSTANTS[8]*CONSTANTS[6]))/( CONSTANTS[26]*CONSTANTS[6]))*CONSTANTS[34];
/* Element with no id */
OC_RATE[7] = OC_WANTED[0];
/* Element with no id */
OC_WANTED[1] = (OC_STATE[4] - CONSTANTS[8])/CONSTANTS[26];
/* Element with no id */
OC_RATE[8] = OC_WANTED[1];
/* Element with no id */
ALGEBRAIC[5] = ((CONSTANTS[7] - OC_STATE[3]) - OC_STATE[4]) - OC_STATE[2];
/* Element with no id */
ALGEBRAIC[0] = CONSTANTS[11]+( (CONSTANTS[13] - CONSTANTS[11])*OC_STATE[1]*CONSTANTS[9])/( OC_STATE[1]*CONSTANTS[9]+CONSTANTS[21]);
/* Element with no id */
ALGEBRAIC[4] = CONSTANTS[12]+( (CONSTANTS[14] - CONSTANTS[12])*OC_STATE[1]*CONSTANTS[9])/( OC_STATE[1]*CONSTANTS[9]+CONSTANTS[21]);
/* Element with no id */
OC_RATE[2] = ( ALGEBRAIC[0]*ALGEBRAIC[5]+ CONSTANTS[29]*OC_STATE[3]+ CONSTANTS[32]*OC_STATE[4]) -  (ALGEBRAIC[4]+CONSTANTS[28]+CONSTANTS[33])*OC_STATE[2];
/* Element with no id */
ALGEBRAIC[1] = (OC_STATE[6]>CONSTANTS[6] ? 1.00000 : OC_STATE[6]<CONSTANTS[6] ? 8.00000 : 0.00000);
/* Element with no id */
ALGEBRAIC[2] = OC_STATE[3]/CONSTANTS[7];
/* Element with no id */
ALGEBRAIC[3] = OC_STATE[4]/CONSTANTS[7];


}//OC_CellML_RHS_routine()

;